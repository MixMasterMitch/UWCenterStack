<project name="UWCenterStack" default="build" basedir=".">
    <description>
        Builds UWCenterStack for use on an iMX.6 Freecale proccessor board.
    </description>

    <property name="workspace.build.dir" location="build"/>
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <property name="build.output" location="${workspace.build.dir}/production"/>
    <property name="lib" location="lib"/>
    <property name="bbwp" location="${lib}/BBWP-1.0.2.9/bbwp"/>
    <property name="zip.file" location="${build.output}/UWCenterStack.zip"/>
    <property name="device.bar.file" location="${build.output}/device/UWCenterStack.bar"/>
    <property name="simulator.bar.file" location="${build.output}/simulator/UWCenterStack.bar"/>
    <property name="target.ip" value="169.254.169.169"/>

	<target name="qnxcar-deploy">

		<!-- Zip files -->
		<zip destfile="${zip.file}"
		    basedir="${build.output}"
			excludes="deltas/**"
		/>

		<!-- Package them for QNX -->
        <exec executable="${bbwp}">
            <arg value="-d"/>
            <arg value="${zip.file}"/>
        </exec>

		<!-- Install App -->
	    <scp file="${device.bar.file}"
	    	todir="root:root@${target.ip}:/tmp"
            failonerror="false"
	    	trust="true"/>
		<sshexec host="${target.ip}"
		    username="root"
		    password="root"
		    command="/base/scripts/bar-install /tmp/UWCenterStack.bar > /log/bar-install-log.txt"
			verbose="true"
			failonerror="false"
			trust="true"/>

	    <!-- Clean up -->
        <delete file="${zip.file}"/>
        <delete file="${device.bar.file}"/>
        <delete file="${simulator.bar.file}"/>
	</target>

    <!-- set global properties for this build -->
    <!-- <property name="src" location="srcs"/>
    <property name="lib" location="lib"/>
    <property name="build" location="build"/>
    <property name="build.lib" location="${build}/lib"/>
    <property name="build.project" location="${build}/project"/>
    <property name="build.project.src" location="${build.project}/srcs"/>
    <property name="build.output" location="${build}/output"/>
    <property name="zip.file" location="${build.output}/UWCenterStack.zip"/>
    <property name="config.file" location="config.xml"/>
    <property name="icon.file" location="icon.png"/>
    <property name="bbwp" location="${lib}/BBWP-1.0.2.9/bbwp"/> -->

    <!-- <target name="zip" description="Zip all of the generated files" >
        <zip destfile="${zip.file}"
            basedir="${build.project}"
        />
    </target> -->

    <!-- <target name="build-test" depends="zip" description="Builds the application for deployment" >
        <exec executable="${bbwp}">
            <arg value="-d"/>
            <arg value="${zip.file}"/>
        </exec>
        <delete file="${zip.file}"/>
    </target> -->

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>

        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->
</project>